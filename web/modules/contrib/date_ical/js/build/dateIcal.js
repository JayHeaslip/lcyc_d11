!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.CKEditor5=n():(e.CKEditor5=e.CKEditor5||{},e.CKEditor5.dateIcal=n())}(self,(()=>(()=>{var __webpack_modules__={"./js/ckeditor5_plugins/dateIcal/src/DateICal-view.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DateICalIconView)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/ui */ \"ckeditor5/src/ui.js\");\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n\n\n\n/**\n * A class rendering the information required from user input.\n *\n * @extends module:ui/view~View\n *\n * @internal\n */\nclass DateICalIconView extends ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.View {\n\n  /**\n   * @inheritdoc\n   */\n  constructor(editor) {\n    const locale = editor.locale;\n    super(locale);\n    const config = editor.config.get('date_ical');\n    this.dtstartInputView = this._createInputDate(editor.t('Date Start'), 'datetime-local');\n    this.dtendInputView = this._createInputDate(editor.t('Date end'), 'datetime-local');\n    this.summaryInputView = this._createInput(editor.t('Summary / title'), 'text');\n    this.descriptionInputView = this._createInput(editor.t('Description'), config.description ? 'text' : 'hidden');\n    this.locationInputView = this._createInput(editor.t('Location'), config.description ? 'text' : 'hidden');\n    this.categoriesInputView = this._createInput(editor.t('Categories'), config.categories ? 'text' : 'hidden');\n    this.organizerInputView = this._createInput(editor.t('Organizer'), config.organizer ? 'email' : 'hidden');\n    this.urlInputView = this._createInput(editor.t('Url'), config.url ? 'url' : 'hidden');\n    let collection = [\n      this.dtstartInputView,\n      this.dtendInputView,\n      this.summaryInputView,\n    ];\n    for (let key in config) {\n      if(undefined != this[key + 'InputView']){\n        collection.push(this[key + 'InputView']);\n      }\n    }\n    // Create the save and cancel buttons.\n    this.saveButtonView = this._createButton(\n      editor.t('Save'), ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_1__.icons.check, 'ck-button-save'\n    );\n    this.saveButtonView.type = 'submit';\n    collection.push(this.saveButtonView);\n    this.cancelButtonView = this._createButton(\n      editor.t('Cancel'), ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_1__.icons.cancel, 'ck-button-cancel'\n    );\n    // Delegate ButtonView#execute to FormView#cancel.\n    this.cancelButtonView.delegate('execute').to(this, 'cancel');\n    collection.push(this.cancelButtonView);\n    this.childViews = this.createCollection(collection);\n    this.setTemplate({\n      tag: 'form',\n      attributes: {\n        class: ['ck', 'ck-responsive-form', 'ck-date-ical'],\n        tabindex: '-1'\n      },\n      children: this.childViews\n    });\n  }\n\n  /**\n   * @inheritdoc\n   */\n  render() {\n    super.render();\n    // Submit the form when the user clicked the save button or\n    // pressed enter the input.\n    (0,ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.submitHandler)({\n      view: this\n    });\n  }\n\n  /**\n   * @inheritdoc\n   */\n  focus() {\n    this.childViews.first.focus();\n  }\n\n\n  /**\n   * Creates an input with a label.\n   *\n   * @return {module:ui/view~View}\n   *   Labeled field view instance.\n   */\n  _createInputDate(label, type = 'text') {\n    const labeledInput = this._createInput(label, type);\n    labeledInput.extendTemplate({\n      attributes: {\n        class: 'ck-labeled-field-view_focused',\n      }\n    });\n    return labeledInput;\n  }\n\n  // Create a generic input field.\n  _createInput(label, type = 'text') {\n    const labeledInput = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.LabeledFieldView(this.locale, ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.createLabeledInputText);\n    if (type != 'hidden') {\n      labeledInput.label = Drupal.t(label);\n    }\n    if (type != 'text') {\n      labeledInput.fieldView.inputMode = type;\n      let tmp = labeledInput.fieldView.template;\n      tmp.attributes.type = type;\n      labeledInput.fieldView.setTemplate(new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.Template(tmp));\n    }\n    return labeledInput;\n  }\n\n  // Create a generic button.\n  _createButton(label, icon, className) {\n    const button = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_0__.ButtonView();\n\n    button.set({\n      label,\n      icon,\n      tooltip: true,\n      class: className,\n    });\n\n    return button;\n  }\n\n}\n\n\n//# sourceURL=webpack://CKEditor5.dateIcal/./js/ckeditor5_plugins/dateIcal/src/DateICal-view.js?")},"./js/ckeditor5_plugins/dateIcal/src/DateICalEditing.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DateICalEditing)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n/* harmony import */ var ckeditor5_src_widget__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ckeditor5/src/widget */ \"ckeditor5/src/widget.js\");\n/* harmony import */ var _InsertICalCommand__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./InsertICalCommand */ \"./js/ckeditor5_plugins/dateIcal/src/InsertICalCommand.js\");\n\n\n\n\n// cSpell:ignore DateICalEditing InsertICalCommand\nclass DateICalEditing extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Plugin {\n  static get requires() {\n    return [ckeditor5_src_widget__WEBPACK_IMPORTED_MODULE_1__.Widget];\n  }\n\n  init() {\n    this._defineSchema();\n    this._defineConverters();\n    this._defineCommands();\n  }\n\n  _defineSchema() {\n    // Schemas are registered via the central `editor` object.\n    const schema = this.editor.model.schema;\n\n    schema.register('iCalendar', {\n      // Behaves like a self-contained object (e.g. an image).\n      isObject: true,\n      // Allow in places where other blocks are allowed (e.g. directly in the root).\n      allowWhere: '$text',\n      isInline: true,\n      allowAttributes: ['class'],\n    });\n  }\n\n  /**\n   * Converters determine how CKEditor 5 models are converted into markup and\n   * vice-versa.\n   */\n  _defineConverters() {\n    // Converters are registered via the central editor object.\n    const { conversion } = this.editor;\n    // Data Downcast Converters: converts stored model data into HTML.\n    // These trigger when content is saved.\n    //\n    // Instances of <urlICalendar> are saved as\n    // <time class=\"icalendar\">{{inner content}}</time>.\n    conversion.for('downcast').elementToElement({\n      model: 'iCalendar',\n      view: {\n        name: 'time',\n        classes: 'icalendar',\n      },\n    });\n\n    // Upcast Converters: determine how existing HTML is interpreted by the\n    // editor. These trigger when an editor instance loads.\n    //\n    // If <div class=\"icalendar\"> is present in the existing markup\n    // processed by CKEditor, then CKEditor recognizes and loads it as a\n    // <urlICalendar> model.\n    conversion.for('upcast').elementToElement({\n      model: 'iCalendar',\n      view: {\n        name: 'time',\n        classes: 'icalendar',\n      },\n    });\n  }\n\n  _defineCommands() {\n    const editor = this.editor;\n    editor.commands.add(\n      'InsertICalCommand',\n      new _InsertICalCommand__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.editor),\n    );\n  }\n}\n\n\n//# sourceURL=webpack://CKEditor5.dateIcal/./js/ckeditor5_plugins/dateIcal/src/DateICalEditing.js?")},"./js/ckeditor5_plugins/dateIcal/src/DateICalUI.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DateICalUI)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n/* harmony import */ var ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ckeditor5/src/ui */ \"ckeditor5/src/ui.js\");\n/* harmony import */ var _DateICal_view__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DateICal-view */ \"./js/ckeditor5_plugins/dateIcal/src/DateICal-view.js\");\n/* harmony import */ var _icons_date_ical_svg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../icons/date-ical.svg */ \"./icons/date-ical.svg\");\n/**\n * @file registers the Address Suggestion toolbar button and binds functionality to it.\n */\n\n\n\n\n\n\nclass DateICalUI extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Plugin {\n  init() {\n    const editor = this.editor;\n    this._balloon = this.editor.plugins.get(ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__.ContextualBalloon);\n    this.formView = this._createFormView();\n\n    // This will register the iCalendar toolbar button.\n    editor.ui.componentFactory.add('dateIcal', (locale) => {\n      const buttonView = new ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__.ButtonView(locale);\n\n      // Create the toolbar button.\n      buttonView.set({\n        label: editor.t('iCalendar'),\n        icon: _icons_date_ical_svg__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n        tooltip: true,\n      });\n\n      // Bind the state of the button to the command.\n      const command = editor.commands.get('InsertICalCommand');\n      buttonView.bind('isOn', 'isEnabled').to(command, 'value', 'isEnabled');\n\n      // Execute the command when the button is clicked (executed).\n      this.listenTo(buttonView, 'execute', () => {\n        this._showUI();\n      });\n\n      return buttonView;\n    });\n\n  }\n\n  _createFormView() {\n    const editor = this.editor;\n    const formView = new _DateICal_view__WEBPACK_IMPORTED_MODULE_2__[\"default\"](editor);\n\n    // On submit send the user data to the writer, then hide the form view.\n    this.listenTo(formView, 'submit', () => {\n      let ical = {\n        'dtstart': formView.dtstartInputView.fieldView.element.value,\n        'dtend': formView.dtendInputView.fieldView.element.value,\n        'summary': formView.summaryInputView.fieldView.element.value,\n        'description': formView.descriptionInputView.fieldView.element.value,\n        'location': formView.locationInputView.fieldView.element.value,\n        'categories': formView.categoriesInputView.fieldView.element.value,\n        'organizer': formView.organizerInputView.fieldView.element.value,\n        'url': formView.urlInputView.fieldView.element.value,\n      };\n      editor.execute('InsertICalCommand', ical);\n      this._hideUI();\n    });\n\n    // Hide the form view after clicking the \"Cancel\" button.\n    this.listenTo(formView, 'cancel', () => {\n      this._hideUI();\n    });\n\n    // Hide the form view when clicking outside the balloon.\n    (0,ckeditor5_src_ui__WEBPACK_IMPORTED_MODULE_1__.clickOutsideHandler)({\n      emitter: formView,\n      activator: () => this._balloon.visibleView === formView,\n      contextElements: [this._balloon.view.element],\n      callback: () => this._hideUI()\n    });\n\n    return formView;\n  }\n\n  _hideUI() {\n    this.formView.dtstartInputView.fieldView.value = '';\n    this.formView.dtendInputView.fieldView.value = '';\n    this.formView.summaryInputView.fieldView.value = '';\n    this.formView.descriptionInputView.fieldView.value = '';\n    this.formView.locationInputView.fieldView.value = '';\n    this.formView.categoriesInputView.fieldView.value = '';\n    this.formView.organizerInputView.fieldView.value = '';\n    this.formView.urlInputView.fieldView.value = '';\n    this.formView.element.reset();\n    this._balloon.remove(this.formView);\n\n    // Focus the editing view after closing the form view.\n    this.editor.editing.view.focus();\n  }\n\n  _showUI() {\n    this._balloon.add({\n      view: this.formView,\n      position: this._getBalloonPositionData(),\n    });\n    this.formView.focus();\n  }\n\n  _getBalloonPositionData() {\n    const view = this.editor.editing.view;\n    const viewDocument = view.document;\n    let target = null;\n\n    // Set a target position by converting view selection range to DOM.\n    target = () => view.domConverter.viewRangeToDom(\n      viewDocument.selection.getFirstRange()\n    );\n\n    return {\n      target\n    };\n  }\n\n}\n\n\n//# sourceURL=webpack://CKEditor5.dateIcal/./js/ckeditor5_plugins/dateIcal/src/DateICalUI.js?")},"./js/ckeditor5_plugins/dateIcal/src/DateIcal.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ DateIcal)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ "ckeditor5/src/core.js");\n/* harmony import */ var _DateICalEditing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DateICalEditing */ "./js/ckeditor5_plugins/dateIcal/src/DateICalEditing.js");\n/* harmony import */ var _DateICalUI__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DateICalUI */ "./js/ckeditor5_plugins/dateIcal/src/DateICalUI.js");\n\n\n\n\n\nclass DateIcal extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Plugin {\n  static get requires() {\n    return [_DateICalEditing__WEBPACK_IMPORTED_MODULE_1__["default"], _DateICalUI__WEBPACK_IMPORTED_MODULE_2__["default"]];\n  }\n  /**\n   * @inheritdoc\n   */\n  static get pluginName() {\n    return "dateIcal";\n  }\n\n}\n\n\n//# sourceURL=webpack://CKEditor5.dateIcal/./js/ckeditor5_plugins/dateIcal/src/DateIcal.js?')},"./js/ckeditor5_plugins/dateIcal/src/InsertICalCommand.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ InsertICalCommand)\n/* harmony export */ });\n/* harmony import */ var ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ckeditor5/src/core */ \"ckeditor5/src/core.js\");\n\n\nclass InsertICalCommand extends ckeditor5_src_core__WEBPACK_IMPORTED_MODULE_0__.Command {\n  execute(iCalendar) {\n    const {editor} = this;\n    const {model} = editor;\n    const config = editor.config.get('date_ical');\n    let host = window.location.protocol + \"//\" + window.location.host;\n    let url = new URL(host + config.download);\n    const linkElement = document.createElement('a');\n    linkElement.className = 'icon-link icon-link-hover';\n    linkElement.innerHTML = `📅 ${iCalendar.summary}`;\n    for (const key in iCalendar) {\n      const value = iCalendar[key];\n      if (value != '') {\n        url.searchParams.set(key, value);\n      }\n    }\n    let href = url.toString();\n    linkElement.setAttribute('href', href.replace(host, ''));\n    let iCal = `<div class='iCalendar'>${linkElement.outerHTML}</div>`;\n    model.change(writer => {\n      const content = writer.createElement('icalendar');\n      const docFrag = writer.createDocumentFragment();\n      const viewFragment = editor.data.processor.toView(iCal);\n      const modelFragment = editor.data.toModel(viewFragment);\n      writer.append(content, docFrag);\n      writer.append(modelFragment, content);\n      model.insertContent(docFrag);\n    });\n  }\n\n  refresh() {\n    const {model} = this.editor;\n    const {selection} = model.document;\n    const allowedIn = model.schema.findAllowedParent(\n      selection.getFirstPosition(),\n      'iCalendar',\n    );\n    this.isEnabled = allowedIn !== null;\n  }\n\n}\n\n\n\n//# sourceURL=webpack://CKEditor5.dateIcal/./js/ckeditor5_plugins/dateIcal/src/InsertICalCommand.js?")},"./js/ckeditor5_plugins/dateIcal/src/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _DateIcal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DateIcal */ "./js/ckeditor5_plugins/dateIcal/src/DateIcal.js");\n/**\n * @file The build process always expects an index.js file. Anything exported\n * here will be recognized by CKEditor 5 as an available plugin. Multiple\n * plugins can be exported in this one file.\n *\n * I.e. this file\'s purpose is to make plugin(s) discoverable.\n */\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({ DateIcal: _DateIcal__WEBPACK_IMPORTED_MODULE_0__["default"] });\n\n\n//# sourceURL=webpack://CKEditor5.dateIcal/./js/ckeditor5_plugins/dateIcal/src/index.js?')},"./icons/date-ical.svg":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("<svg xmlns=\\"http://www.w3.org/2000/svg\\" width=\\"16\\" height=\\"16\\" fill=\\"currentColor\\" class=\\"bi bi-calendar-event\\" viewBox=\\"0 0 16 16\\">\\n  <path d=\\"M11 6.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5z\\"/>\\n  <path d=\\"M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5M1 4v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4z\\"/>\\n</svg>");\n\n//# sourceURL=webpack://CKEditor5.dateIcal/./icons/date-ical.svg?')},"ckeditor5/src/core.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ "dll-reference CKEditor5.dll"))("./src/core.js");\n\n//# sourceURL=webpack://CKEditor5.dateIcal/delegated_./core.js_from_dll-reference_CKEditor5.dll?')},"ckeditor5/src/ui.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ "dll-reference CKEditor5.dll"))("./src/ui.js");\n\n//# sourceURL=webpack://CKEditor5.dateIcal/delegated_./ui.js_from_dll-reference_CKEditor5.dll?')},"ckeditor5/src/widget.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = (__webpack_require__(/*! dll-reference CKEditor5.dll */ "dll-reference CKEditor5.dll"))("./src/widget.js");\n\n//# sourceURL=webpack://CKEditor5.dateIcal/delegated_./widget.js_from_dll-reference_CKEditor5.dll?')},"dll-reference CKEditor5.dll":e=>{"use strict";e.exports=CKEditor5.dll}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var t=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](t,t.exports,__webpack_require__),t.exports}__webpack_require__.d=(e,n)=>{for(var t in n)__webpack_require__.o(n,t)&&!__webpack_require__.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},__webpack_require__.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./js/ckeditor5_plugins/dateIcal/src/index.js");return __webpack_exports__=__webpack_exports__.default,__webpack_exports__})()));